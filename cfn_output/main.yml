AWSTemplateFormatVersion: 2010-09-09
Parameters:
  Domain:
    Type: String
  Certificate:
    Type: String
    Description: An existing ACM certificate ARN for your domain
  EC2InstanceType:
    Type: String
  EC2AMI:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  CodePipelineBucket:
    Type: String
    Description: The s3 bucket for codepipeline artifacts
  GitHubOwner:
    Type: String
    Description: The username of the github repo.
  GitHubRepo:
    Type: String
    Description: The source github repo name (without the username).
  GitHubBranch:
    Type: String
    Default: master
    Description: The source github branch.
  GitHubPersonalAccessToken:
    Type: String
    NoEcho: true
    Description: A github personal access token with "repo" and "admin:repo_hook"
      permissions.
Resources:
  DeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
            - codedeploy.amazonaws.com
            - codebuild.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/PowerUserAccess
  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Ref: AWS::StackName
      ServiceRole:
        Fn::GetAtt:
        - DeploymentRole
        - Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
      Source:
        Type: CODEPIPELINE
  DeploymentApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName:
        Ref: AWS::StackName
      ComputePlatform: Server
  StagingDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      DeploymentGroupName: staging
      AutoScalingGroups:
      - Fn::GetAtt:
        - Staging
        - Outputs.ScalingGroup
      ApplicationName:
        Ref: DeploymentApplication
      DeploymentConfigName: CodeDeployDefault.AllAtOnce
      ServiceRoleArn:
        Fn::GetAtt:
        - DeploymentRole
        - Arn
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name:
        Ref: AWS::StackName
      ArtifactStore:
        Location:
          Ref: CodePipelineBucket
        Type: S3
      RoleArn:
        Fn::GetAtt:
        - DeploymentRole
        - Arn
      Stages:
      - Name: Source
        Actions:
        - Name: Source
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Version: 1
            Provider: GitHub
          OutputArtifacts:
          - Name: Source
          Configuration:
            Owner:
              Ref: GitHubOwner
            Repo:
              Ref: GitHubRepo
            Branch:
              Ref: GitHubBranch
            OAuthToken:
              Ref: GitHubPersonalAccessToken
            PollForSourceChanges: false
          RunOrder: 1
      - Name: Build
        Actions:
        - Name: Build
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: 1
            Provider: CodeBuild
          InputArtifacts:
          - Name: Source
          OutputArtifacts:
          - Name: Build
          Configuration:
            ProjectName:
              Ref: BuildProject
          RunOrder: 1
      - Name: Staging
        Actions:
        - Name: Staging
          InputArtifacts:
          - Name: Build
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Version: 1
            Provider: CodeDeploy
          Configuration:
            ApplicationName:
              Ref: DeploymentApplication
            DeploymentGroupName:
              Ref: StagingDeploymentGroup
          RunOrder: 1
      - Name: Prod
        Actions:
        - Name: Prod
          InputArtifacts:
          - Name: Build
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Version: 1
            Provider: CodeDeploy
          Configuration:
            ApplicationName:
              Ref: DeploymentApplication
            DeploymentGroupName:
              Ref: ProdDeploymentGroup
          RunOrder: 1
  PipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken:
          Ref: GitHubPersonalAccessToken
      Filters:
      - JsonPath: $.ref
        MatchEquals: refs/heads/{Branch}
      TargetPipeline:
        Ref: Pipeline
      TargetAction: Source
      Name:
        Fn::Sub: webhook-${AWS::StackName}
      TargetPipelineVersion:
        Fn::GetAtt:
        - Pipeline
        - Version
      RegisterWithThirdParty: true
  Staging:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.us-west-2.amazonaws.com/awsbootstrap-cfn-256329869273/0f2664aa2da2313576f8a021b2130fc4.template
      TimeoutInMinutes: 30
      Parameters:
        EC2InstanceType:
          Ref: EC2InstanceType
        EC2AMI:
          Ref: EC2AMI
        Domain:
          Ref: Domain
        SubDomain: staging
        Certificate:
          Ref: Certificate
  Prod:
    Type: AWS::CloudFormation::Stack
    DependsOn: Staging
    Properties:
      TemplateURL: https://s3.us-west-2.amazonaws.com/awsbootstrap-cfn-256329869273/0f2664aa2da2313576f8a021b2130fc4.template
      TimeoutInMinutes: 30
      Parameters:
        EC2InstanceType:
          Ref: EC2InstanceType
        EC2AMI:
          Ref: EC2AMI
        Domain:
          Ref: Domain
        SubDomain: prod
        Certificate:
          Ref: Certificate
  ProdDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      DeploymentGroupName: prod
      AutoScalingGroups:
      - Fn::GetAtt:
        - Prod
        - Outputs.ScalingGroup
      ApplicationName:
        Ref: DeploymentApplication
      DeploymentConfigName: CodeDeployDefault.OneAtATime
      ServiceRoleArn:
        Fn::GetAtt:
        - DeploymentRole
        - Arn
Outputs:
  StagingHTTPSLBEndpoint:
    Description: DNS name for the staging HTTPS LB
    Value:
      Fn::GetAtt:
      - Staging
      - Outputs.HTTPSEndpoint
    Export:
      Name: StagingHTTPSLBEndpoint
  ProdHTTPSLBEndpoint:
    Description: DNS name for the prod HTTPS LB
    Value:
      Fn::GetAtt:
      - Prod
      - Outputs.HTTPSEndpoint
    Export:
      Name: ProdHTTPSLBEndpoint
